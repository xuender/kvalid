name: Go
on:
  push:
    branches: [main]
  pull_request:
    branches: [main]
jobs:
  linux:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        golangci_lint: [v1.50]
    steps:
      - uses: actions/checkout@v3
      - name: Set up Go
        uses: actions/setup-go@v3
        with:
          go-version: 1.18
      - name: golangci-lint
        uses: golangci/golangci-lint-action@v3.6.0
        with:
          version: ${{ matrix.golangci_lint }}
          args: --timeout=2m
          only-new-issues: false
          working-directory: .
      - name: Test
        run: go test -v ./... -gcflags=all=-l
      - name: Coverage
        run: go test ./... -gcflags=all=-l -race -coverprofile=coverage.txt -covermode=atomic
      - name: Upload coverage to Codecov
        uses: codecov/codecov-action@v2.0.2
        with:
          token: ${{ secrets.CODECOV_TOKEN }}
          file: ./coverage.txt
          flags: unittests
          env_vars: OS,GOLANG
          name: codecov-umbrell
          fail_ci_if_error: false
      - name: Get lines of code (more sophisticated)
        id: scc
        uses: iryanbell/scc-docker-action@v1.0.2
        with:
          args: ${{ env.workspace }} -i go --format json
      - name: Make lines of code badge
        uses: emibcn/badge-action@v2.0.2
        with:
          label: Lines of Code
          status: ${{ fromJson(steps.scc.outputs.scc)[0].Code }}
          color: "blue"
          path: .github/lines.svg
